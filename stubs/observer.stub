<?php

namespace {{ namespace }};

use {{ namespacedModel }};

class {{ class }}
{
    /**
     * @param {{ model }} ${{ modelVariable }}
     * @return void
     */
    public function creating({{ model }} ${{ modelVariable }})
    {

    }

    /**
     * @param {{ model }} ${{ modelVariable }}
     * @return void
     */
    public function created({{ model }} ${{ modelVariable }})
    {

    }

    /**
     * @param {{ model }} ${{ modelVariable }}
     * @return void
     */
    public function updating({{ model }} ${{ modelVariable }})
    {

    }

    /**
     * @param {{ model }} ${{ modelVariable }}
     * @return void
     */
    public function updated({{ model }} ${{ modelVariable }})
    {

    }

    /**
     * @param {{ model }} ${{ modelVariable }}
     * @return void
     */
    public function saving({{ model }} ${{ modelVariable }})
    {

    }

    /**
     * @param {{ model }} ${{ modelVariable }}
     * @return void
     */
    public function saved({{ model }} ${{ modelVariable }})
    {

    }

    /**
     * @param {{ model }} ${{ modelVariable }}
     * @return void
     */
    public function deleting({{ model }} ${{ modelVariable }})
    {
        if(${{ modelVariable }}->isForceDeleting()) {

        }
    }

    /**
     * @param {{ model }} ${{ modelVariable }}
     * @return void
     */
    public function deleted({{ model }} ${{ modelVariable }})
    {

    }

    /**
     * @param {{ model }} ${{ modelVariable }}
     * @return void
     */
    public function restoring({{ model }} ${{ modelVariable }})
    {

    }

    /**
     * @param {{ model }} ${{ modelVariable }}
     * @return void
     */
    public function restored({{ model }} ${{ modelVariable }})
    {

    }

    /**
     * @param {{ model }} ${{ modelVariable }}
     * @return void
     */
    public function forceDeleted({{ model }} ${{ modelVariable }})
    {

    }
}
